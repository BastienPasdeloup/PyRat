#####################################################################################################################################################
######################################################################## INFO #######################################################################
#####################################################################################################################################################

"""
    TODO
"""

#####################################################################################################################################################
###################################################################### IMPORTS ######################################################################
#####################################################################################################################################################

# Internal imports
from Graph import *

# External imports
from typing import *
from typing_extensions import *

#####################################################################################################################################################
################################################################## GAME DEFINITION ##################################################################
#####################################################################################################################################################

class Maze (Graph):

    """
        A maze is a particular type of graph.
        Each vertex is a cell.
        There are edges between adjacent cells.
        Weights indicate the number of actions required to go from one cell to an adjacent one.
        In this implementation, cells are placed on a grid and can only be connected along the cardinal directions.
    """

    #############################################################################################################################################
    #                                                                CONSTRUCTOR                                                                #
    #############################################################################################################################################

    def __init__ ( self:   Self,
                   width:  int,
                   height: int
                 ) ->      Self:

        """
            This function is the constructor of the class.
            In:
                * self:   Reference to the current object.
                * width:  Width of the maze.
                * height: Height of the maze.
            Out:
                * self: Reference to the current object.
        """

        # Inherit from parent class
        super(Maze, self).__init__()
        
        # Attributes
        self.width  = width
        self.height = height

    #############################################################################################################################################
    #                                                               PUBLIC METHODS                                                              #
    #############################################################################################################################################

    def get_width ( self: Self
                  ) ->    int:

        """
            This function returns the width of the maze.
            In:
                * self: Reference to the current object.
            Out:
                * width: Width of the maze.
        """

        # Return the width
        return self.width
    
    #############################################################################################################################################

    def get_height ( self: Self
                   ) ->    int:

        """
            This function returns the height of the maze.
            In:
                * self: Reference to the current object.
            Out:
                * height: Height of the maze.
        """

        # Return the height
        return self.height

#####################################################################################################################################################
#####################################################################################################################################################
